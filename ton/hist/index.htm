<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
        <title></title>
    </head>
    <body>

<script language="JavaScript">
<!--
    document.write("Helloe World!!");
	var x = new Array(10) ; 
	x = [0,1,0,1,1,0,1,0,0,1,0,0,1,0,1];
	for(i=0;i<10;i++){
    	//document.write(x[i]) ;
		
	}
	document.write(x) ;
//-->
</script>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<table width="342" border="0" align="left">
  <tr>
    <td>&nbsp; </td>
    <td>
      <div align="center">The Bar Histogram</div>
    </td>
  </tr>
  <tr>
    <td height="37">
      <div align="center"></div>
    </td>
    <td rowspan="4">
      <div align="center"><applet code="BarHisto.class" width=320 height=290>
        </applet></div>
    </td>
  </tr>
  <tr>
    <td height="101">
      <div align="center">A</div>
    </td>
  </tr>
  <tr>
    <td height="121">
      <div align="center">B</div>
    </td>
  </tr>
  <tr>
    <td></td>
  </tr>
</table>
<table width="360" border="0">
  <tr>
    <td width="11">&nbsp;</td>
    <td width="339"> 
      <div align="center">The Cost Function</div>
    </td>
  </tr>
  <tr>
    <td height="40" width="11"></td>
    <td rowspan="4" width="339"> 
      <div align="center"><applet code="CostFunction.class" width=320 height=590>
        </applet></div>
    </td>
  </tr>
  <tr>
    <td height="109" width="11"> 
      <div align="center">
        <p>A</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
      </div>
    </td>
  </tr>
  <tr>
    <td height="98" width="11"> 
      <div align="center">B</div>
    </td>
  </tr>
  <tr>
    <td width="11"> 
      <div align="center">C</div>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<table width="95%" border="1">
  <tr> 
    <td width="15%">&nbsp;</td>
    <td width="25%">&nbsp;</td>
    <td width="29%">&nbsp;</td>
    <td width="29%">Programs (m-files)</td>
    <td width="31%">Data</td>
    <td width="31%">Programs for data presentation</td>
  </tr>
  <tr> 
    <td width="15%">Figure 2</td>
    <td width="25%">Bar Histogram</td>
    <td width="29%">data/GaussT20mu30s10g10 y X</td>
    <td width="29%">BarHisto.m</td>
    <td width="31%">data/BarGaussCost.mat</td>
    <td width="31%">FIG2.m</td>
  </tr>
  <tr> 
    <td width="15%">Figure 3</td>
    <td width="25%">Criticality</td>
    <td width="29%">&nbsp;</td>
    <td width="29%"> 
      <p>BarHisto.m</p>
      <p>&nbsp;</p>
    </td>
    <td width="31%"> 
      <p>data/BarGaussCriticality2.mat</p>
      <p>data/BarGaussCriticalityN9.mat </p>
    </td>
    <td width="31%"> 
      <p>FIG3.m </p>
      <p>FIG3c.m</p>
    </td>
  </tr>
  <tr> 
    <td width="15%">Figure 4</td>
    <td width="25%">Line-Histo</td>
    <td width="29%">&nbsp;</td>
    <td width="29%">LineHisto.m</td>
    <td width="31%">data/LineGaussCost2</td>
    <td width="31%">FIG4t.m</td>
  </tr>
  <tr> 
    <td width="15%" height="29">Figure 5</td>
    <td width="25%" height="29">Scaling</td>
    <td width="29%" height="29">GaussT20mu30g100s13 y</td>
    <td width="29%" height="29">BarHisto.m</td>
    <td width="31%" height="29"> 
      <p>data/BarGaussScaling.mat</p>
      <p>data/BarOUPScaling.mat</p>
    </td>
    <td width="31%" height="29">FIG5.m</td>
  </tr>
  <tr> 
    <td width="15%">&nbsp;</td>
    <td width="25%">&nbsp;</td>
    <td width="29%">&nbsp;</td>
    <td width="29%">LineHisto.m</td>
    <td width="31%"> 
      <p>data/LineGaussScaling3.mat</p>
      <p>data/LineOUPScaling3.mat</p>
    </td>
    <td width="31%">FIG7.m</td>
  </tr>
  <tr> 
    <td width="15%">Figure 6</td>
    <td width="25%">Experimental Data</td>
    <td width="29%">&nbsp;</td>
    <td width="29%">&nbsp;</td>
    <td width="31%"> 
      <p>../data/britten/mat/j024.mat</p>
    </td>
    <td width="31%">FIG_Data.m</td>
  </tr>
</table>
<p>&nbsp;</p>
<table width="95%" border="1">
  <tr> 
    <td width="15%">Figure 1</td>
    <td width="25%">Bar Histogram</td>
    <td width="29%">BarHisto.m</td>
    <td width="31%">data/FIG1_NIPS3.mat</td>
    <td width="31%">FIG1_NIPS.m</td>
  </tr>
  <tr> 
    <td width="15%" height="24">Figure 2</td>
    <td width="25%" height="24">Criticality</td>
    <td width="29%" height="24">BarHisto.m</td>
    <td width="31%" height="24"> 
      <p>data/FIG2_NIPS.mat<br>
        data/FIG2c_NIPS2.mat</p>
      </td>
    <td width="31%" height="24">
      <p>FIG2_NIPS.m</p>
      <p>FIG2c_NIPS.m</p>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>%Bar-Histogram<br>
  % This program gives a cost function of Bar-Graph Time Histogram.<br>
  % Aug. 24, 2005 Author Hideaki Shimazaki<br>
  % Department of Physics, Kyoto University<br>
  % D: Delta<br>
  % N: The number of Spike Sequences</p>
<p>clear all; close all;</p>
<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>
  % Parameter Settings<br>
  switch 1<br>
  case 1 %FIG.2 Bar-PSTH, Gauss<br>
  dt = 0.0001; N = 50; T = 20; mu = 30; g = 10; s = 10;<br>
  L = ceil(T/dt); tt = dt*[1:L];<br>
  Dmin = 0.002; Dmax = .5; nmin = Dmin/dt; nmax = Dmax/dt;<br>
  bin = round(linspace(nmin,nmax,50));</p>
<p> Nc = mu*g /s/s/sqrt(pi)<br>
  y = gauss_filter(mu,s,g,L,dt);<br>
  %load data/GaussT20mu30s10g10 y X</p>
<p> case 2 %FIG.3 Bar-PSTH, Gauss, Criticality<br>
  %dt = 0.0001; N = 50; T = 20; mu = 30; g = 200; s = sqrt(60/sqrt(pi)); <br>
  %dt = 0.0001; N = 100; T = 20; mu = 30; g = 1/0.002; s = 10; <br>
  dt = 0.001; N = 30; T = 20; mu = 30; g = 10; s = 2;<br>
  <br>
  L = ceil(T/dt); tt = dt*[1:L];<br>
  Dmin = 0.1; Dmax = 4; nmin = Dmin/dt; nmax = Dmax/dt;<br>
  bin = round(fliplr( 1./linspace(1/nmax,1/nmin,100) )); %Equi-distance in 1/D 
  space.<br>
  dbin = diff(bin); idx = find(dbin~=0); bin=[bin(1), bin(idx+1)];<br>
  %bin = round(linspace(nmin,nmax,100));</p>
<p> Nc = mu*g /s/s/sqrt(pi)<br>
  %y = gauss_filter(mu,s,g,L,dt);<br>
  flag = 1;<br>
  while flag <br>
  y = gauss_filter(mu,s,g,L,dt); <br>
  flag = (mean(y) &lt; mu + .1)*(mean(y) &gt; mu - .1)...<br>
  *(var(y) &lt; s^2 + .1) * (var(y) &gt; s^2 - .1);<br>
  flag = ~flag;<br>
  end<br>
  <br>
  mean(y),var(y)</p>
<p> case 3 %FIG.4 Bar-PSTH, Gauss, Scaling<br>
  dt = 0.0001; N = 100; T = 20; mu = 30; g = 10; s = 10;<br>
  L = ceil(T/dt); tt = dt*[1:L];<br>
  Dmin = 0.0001; Dmax = 1; nmin = Dmin/dt; nmax = Dmax/dt;<br>
  bin = round( logspace(log10(nmin),log10(nmax),100) );<br>
  dbin = diff(bin); idx = find(dbin~=0); bin=[bin(1), bin(idx+1)];</p>
<p> y = gauss_filter(mu,s,g,L,dt); <br>
  Nc = mu*g /s/s/sqrt(pi)<br>
  %load GaussT20mu30g100s13 y</p>
<p> case 4 %FIG.4$ Bar-PSTH, OUP, Scaling<br>
  dt = 0.0001; N = 100; T = 30; mu = 30; g = 50; s = 10; <br>
  L = ceil(T/dt); tt = dt*[1:L];<br>
  Dmin = 0.0001; Dmax = 1; nmin = Dmin/dt; nmax = Dmax/dt;<br>
  bin = round( logspace(log10(nmin),log10(nmax),100) );<br>
  dbin = diff(bin); idx = find(dbin~=0); bin=[bin(1), bin(idx+1)];</p>
<p> y = oup(mu,mu,s,g,N,L,dt); Nc = g*mu/s/s/2<br>
  <br>
  case 5 %FIG.1 NIPS Bar-PSTH, Gauss<br>
  dt = 0.0001; N = 30; T = 30; mu = 30; g = 20; s = 10;<br>
  L = ceil(T/dt); tt = dt*[1:L];<br>
  Dmin = 0.004; Dmax = .5; nmin = Dmin/dt; nmax = Dmax/dt;<br>
  bin = round(linspace(nmin,nmax,50));</p>
<p> Nc = mu*g /s/s/sqrt(pi)<br>
  y = gauss_filter(mu,s,g,L,dt);<br>
  <br>
  case 6 %FIG.2 NIPS Bar-PSTH, Crtitical<br>
  dt = 0.0001; N = 10; T = 30; mu = 30; g = 20; s = 4;</p>
<p> L = ceil(T/dt); tt = dt*[1:L];<br>
  Dmin = 0.1; Dmax = 4; nmin = Dmin/dt; nmax = Dmax/dt;<br>
  bin = round(fliplr( 1./linspace(1/nmax,1/nmin,50) )); %Equi-distance in 1/D 
  space.<br>
  dbin = diff(bin); idx = find(dbin~=0); bin=[bin(1), bin(idx+1)];<br>
  %bin = round(linspace(nmin,nmax,100));</p>
<p> Nc = mu*g /s/s/sqrt(pi)<br>
  %y = gauss_filter(mu,s,g,L,dt);<br>
  flag = 1;<br>
  while flag <br>
  y = gauss_filter(mu,s,g,L,dt); <br>
  flag = (mean(y) &lt; mu + .2)*(mean(y) &gt; mu - .2)...<br>
  *(var(y) &lt; s^2 + .2) * (var(y) &gt; s^2 - .2);<br>
  flag = ~flag;<br>
  end<br>
  <br>
  mean(y),var(y)<br>
  end</p>
<p>% Bin Size <br>
  %Dmin = 0.002; Dmax = .5; nmin = Dmin/dt; nmax = Dmax/dt;</p>
<p>% Equi-distance<br>
  %bin = round(linspace(nmin,nmax,50)); </p>
<p>% Equi-distance in Log scale<br>
  %bin = round( logspace(log10(nmin),log10(nmax),400) );%sqrt(nmax-nmin))<br>
  %dbin = diff(bin); idx = find(dbin~=0); bin=[bin(1), bin(idx+1)];</p>
<p>% Equi-distance in One-over-Delta<br>
  %bin = fliplr( round(L./(2:1:floor(sqrt(L)) )) );<br>
  %bin = fliplr( round(L./(T/1:1:floor(sqrt(L)) )) ); %MAIN<br>
  %bin = fliplr( round(L./(2:10:floor(sqrt(L)) )) ); %MAIN</p>
<p>%Divide mod = 0<br>
  %LL = 1:L; bin = LL(rem(0.2/dt,LL)==0);</p>
<p>%Q = fliplr(1./sqrt(bin.*dt)); u = 2*s^2/g/g; a = 2*mu;<br>
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>
  % Generation of an Intensity Process<br>
  %<br>
  % Ornstein-Uhlenbeck Process<br>
  %y = oup(mu,mu,s,g,N,L,dt); Nc = g*mu/s/s/2</p>
<p>% Filtered with Alpha function<br>
  %eta = 2*s/sqrt(g); y = alpha_filter(2,mu,eta,g,L,dt); Nc = mu*g^2 / 4/s/s;</p>
<p>% Sinusoidal <br>
  %y = mu + s*sin(g*tt); Nc = g*mu/s/s * 8/pi</p>
<p>% Filtered with Gauss function<br>
  %y = gauss_filter(mu,s,g,L,dt); Nc = mu*g /s/s/sqrt(pi)</p>
<p>% Rectification<br>
  y = y.*(y&gt;0);</p>
<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>
  % Generation of Poisson Point Processes<br>
  %x = sparse(poissrnd(ones(N,1)*y.*dt));<br>
  for i = 1: N<br>
  X(i,:) = sparse(poissrnd(y.*dt));<br>
  end</p>
<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>
  % Estimation of the Cost Functioin</p>
<p>x = sum(X);<br>
  for j = 1: length(bin)<br>
  disp(strcat(num2str(j),'/',num2str(length(bin)))); % give bin width<br>
  W = bin(j);<br>
  D(j) = W*dt;<br>
  <br>
  clear x_shift;<br>
  shift = 1; <br>
  for SHIFT = 1: ceil(W/W): W; %SHIFT: shifting the start point of the binning 
  <br>
  x_shift = x(1,SHIFT:L);<br>
  <br>
  COL = floor(length(x_shift)/W);<br>
  SPKNUM = zeros(1,COL);<br>
  for i = 1: COL<br>
  SPKNUM(i) = full( sum( x_shift(W*(i-1)+1:W*i) ));<br>
  end</p>
<p> kbar_SHIFT(shift) = mean([SPKNUM]);<br>
  s2_SHIFT(shift) = var([SPKNUM]);<br>
  shift = shift + 1; <br>
  end<br>
  <br>
  kbar(j) = mean(kbar_SHIFT);<br>
  s2(j) = mean(s2_SHIFT);<br>
  C(j) = ( 2*kbar(j) - s2(j) ) ./ (N .* D(j)).^2;<br>
  end</p>
<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>
  % Optimal Bin Size Selection<br>
  [optC,nC]=min(C); optD = D(nC);</p>
<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>
  % Analytical Solutions<br>
  %OUP<br>
  V = 2*(s^2)./(g.^2).*(g.*D - (1-exp(-g.*D)) )./D./D; %OUP<br>
  %V = s^2./(g.*D).^2.*(1 - cos(g.*D)); % SIN<br>
  V = s^2./(g.*D).^2.*(-1 + exp(-(g*D).^2) + sqrt(pi)*g.*D.*erf(g.*D) ); %GAUSS<br>
  E = mu./D./N;<br>
  Ch = E-V;<br>
  [optCh,nCh]=min(Ch); anaoptD = D(nCh);</p>
<p>figure;<br>
  %%%%%%%% Cost Function<br>
  subplot(1,2,1); plot(D,C,'r.');<br>
  hold on; plot(D,Ch,'b');<br>
  grid on; title('Cost Function'); xlabel('\Delta');<br>
  legend('Numerical','Analytical');</p>
<p>subplot(1,2,2); plot(1./D,C,'r.');<br>
  hold on; plot(1./D,Ch,'b');<br>
  grid on; title('Cost Function'); xlabel('1/\Delta');<br>
  legend('Numerical','Analytical');</p>
<p><br>
  %%%%%%%% Intensity Process, Raster Plots and Histogram <br>
  figure; <br>
  subplot(3,1,1); plot(tt,y); xlabel('Time [s]');<br>
  title(strcat( 'N=',num2str(N),' T=',num2str(T),' \mu=',num2str(mu), ...<br>
  ' \gamma=',num2str(g),' \sigma=',num2str(s),' Nc=',num2str(Nc) ));<br>
  subplot(3,1,2); spy(X); axis fill;<br>
  subplot(3,1,3); bar(mean(binnedraster(X(1:N,1:L),bin(nC),dt)),1); axis tight;</p>
<p><br>
  %save sin2.mat dt tt N y X x C D nC kbar s2 mu s g </p>
<p></p>
<p></p>
<p><br>
</p>
</body>
</html>
